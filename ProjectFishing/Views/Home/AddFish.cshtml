@model ProjectFishing.Models.Fish

@{
    ViewBag.Title = "Добавление рыбы в энциклопедию";
}

    <h2 style="padding-left:30px;">@ViewBag.Title</h2>


@using (Html.BeginForm("AddFish", "Home", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
                @Html.AntiForgeryToken()

            <div class="form-horizontal">
    
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
 
        <div class="input-group " style="padding-left:30px;">
            <div class="input-group-prepend">
                <span class="input-group-text" id="inputGroupFileAddon01">Загрузка фото</span>
            </div>
            <div class="custom-file" style="padding-bottom:10px;">
                <input type="file" name="Image" class="custom-file-input" id="inputGroupFile01" aria-describedby="inputGroupFileAddon01">

            </div>
            <div class="custom-file"style="padding-bottom:10px;">
                <input type="file" name="Image" class="custom-file-input" id="inputGroupFile01" aria-describedby="inputGroupFileAddon01">

            </div>
            <div class="custom-file"style="padding-bottom:10px;">
                <input type="file" name="Image" class="custom-file-input" id="inputGroupFile01" aria-describedby="inputGroupFileAddon01">

            </div>
        </div>
  
    <div class="form-group">
        @Html.LabelFor(model => model.ClassificationOfFish, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ClassificationOfFish, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ClassificationOfFish, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Habitats, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Habitats, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Habitats, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Baits, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Baits, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Baits, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FishingMethod, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FishingMethod, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FishingMethod, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SpawningTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SpawningTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SpawningTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Создать" class="btn btn-default" />
        </div>
    </div>
</div>
}




